# Fase 1: Construção do projeto e isolamento das dependências
FROM node:16-alpine AS builder
RUN apk update && apk add --no-cache git
# Set working directory
WORKDIR /app

# Instalar Turbo globalmente
RUN yarn global add turbo

# Copiar arquivos para o contêiner
COPY . .

# Prune para isolar as dependências do backend
RUN turbo prune --scope=backend --docker

# Fase 2: Instalação das dependências isoladas
FROM node:16-alpine AS installer
RUN apk update
WORKDIR /app

# Copiar os arquivos isolados do builder
COPY --from=builder /app/out/json/ ./
COPY --from=builder /app/out/yarn.lock ./yarn.lock
COPY --from=builder /app/turbo.json ./turbo.json
COPY --from=builder /app/apps/backend/prisma ./prisma

# Instalar as dependências necessárias
RUN yarn install --frozen-lockfile

# Gerar o cliente Prisma
RUN yarn prisma generate 

# Fase 3: Construção do projeto
FROM node:16-alpine AS sourcer
WORKDIR /app

# Copiar dependências instaladas
COPY --from=installer /app/ ./

# Copiar código completo do builder para a build final
COPY --from=builder /app/out/full/ ./
COPY .gitignore .gitignore

# Executar a build do projeto
RUN yarn turbo run build --scope=backend --include-dependencies --no-deps

# Fase 4: Execução do projeto
FROM node:16-alpine as runner
WORKDIR /app

# Copiar o projeto construído
COPY --from=sourcer /app/ ./

# Definir o comando de execução
CMD ["node", "apps/backend/dist/main.js"]